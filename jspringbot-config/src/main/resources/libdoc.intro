A test library providing keywords for accessing configuration files.

Config is a jSpringBot library that contains keywords to access values in properties file. This library if useful for creating domain based variables.

Please see the example {{Config Library}} project.

{{jspringbot-github:sample-config|Sample Project}}

== Examples ==

*Assume we have the following properties:*

{{classpath:variables.properties}}

| url=http://localhost:8080/
| property1=property1 value

{{classpath:sample.properties}}

| property1=sample property 1 value
| property2=sample property 2 value
| timeout=5000
| amount=5.35
| is.enable.config=true

*Spring configuration code snippet ({{spring-config.xml}}):*

|   <bean name="configHelper" class="org.jspringbot.keyword.config.ConfigHelper" init-method="init">
|     <property name="domains">
|       <map>
|         <entry key="variables" value="classpath:variables.properties"/>
|         <entry key="sample" value="classpath:sample.properties"/>
|       </map>
|     </property>
|   </bean>

*Sample Test Usage:*

| `Select Config Domain` | variable                      |                       |
| ${url}=                | `Get Config Property`         | url                   |
| ${property1}=          | `Get Config Property`         | property1             |
| `Select Config Domain` | sample                        |                       |
| ${sample1}=            | `Get Config Property`         | property1             |
| ${sample2}=            | `Get Config Property`         | property2             |
| ${timeout}=            | `Get Config Long Property`    | timeout               |
| ${amount}=             | `Get Config Double Property`  | amount                |
| ${configEnabled}=      | `Get Config Boolean Property` | is.enable.config      |

=>

| ${url} = "http://localhost:8080/"
| ${property1} = "property1 value"
| ${sample1} = "sample property 1 value"
| ${sample2} = "sample property 2 value"
| ${timeout} = 5000                     # integer type
| ${amount} = 5.35                      # double type
| ${configEnabled} = true               # boolean type

*Using domain object*

| ${variable}= | `Create Config Domain Object` | variable                      |
| ${sample}=   | `Create Config Domain Object` | sample                        |

=>

| ${variable.getDomain()} = "variable"
| ${variable.get('url')} = "http://localhost:8080/"
| ${variable.get('property1')} = "property1 value"
| ${sample.getDomain()} = "sample"
| ${sample.get('property1')} = "sample property 1 value"
| ${sample.get('property2')} = "sample property 2 value"
| ${sample.getInteger('timeout')} = 5000                   # integer type
| ${sample.getDouble('amount')} = 5.35                     # double type
| ${sample.getBoolean('is.enable.config')} = true          # boolean type

== Expression Support ==

{{Config Library}} has a custom jSpringBot expression language. The expression supported is as follows {{html:<code>}}#{config[:domain]:property}{{html:</code>}}.

Where:

- {{domain}} is optional, will use the default selection if not available.
- {{property}} is required, this is the config property.

{{html:<div class="alert alert-danger">}} {{html:<strong>}}Important!{{html:</strong>}} The config expression is only available for jSpringBot Library keywords. {{html:</div>}}

*To enable add the following to {{spring-config.xml}}:*

|  <bean name="configExpressionHandler"
|        class="org.jspringbot.keyword.config.ConfigExpressionHandler">
|    <constructor-arg ref="configHelper"/>
|  </bean>
|
|  <bean name="configExpressionHandlerRegistryBean"
|         class="org.jspringbot.keyword.expression.plugin.ExpressionHandlerRegistryBean">
|    <constructor-arg ref="configExpressionHandler"/>
|  </bean>


*Sample Test Usage:*

| `Select Config Domain` | variable                      |                            |
| `Evaluate Expression`  | \#{config:url}                | # output the result to log |

=>

| \#{config:url} = "http://localhost:8080/"
| \#{config:property1} = "property1 value"
| \#{config:sample:property1} = "sample property 1 value"
| \#{i:config:sample:timeout} = 5000                # integer type
| \#{b:config:sample:is.enable.config} = true       # boolean type
| \#{d:config:sample:amount} = 5.35                 # double type

